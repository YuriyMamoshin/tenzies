{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuriy\\\\Documents\\\\Pro\\\\React-projects\\\\tenzies\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Die from \"./Die\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n  function allNewDice() {\n    let numbersArray = [];\n    for (let i = 0; i < 10; i++) {\n      numbersArray.push(generateNewDie());\n    }\n    return numbersArray;\n  }\n  function rollDice() {\n    setDice(oldDice => oldDice.map(die => {\n      return die.isHeld ? die : generateNewDie();\n    }));\n  }\n  function holdDice(id) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === id ? {\n        ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n  }\n  const [dice, setDice] = React.useState(allNewDice());\n  const diceArray = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 39\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tenzies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Roll untill all dice are the same. Click each die to freeze it at its current value between rolls.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDice,\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"FBcbDbTSXYNs4QNsRKPH911OvUI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Die","nanoid","App","generateNewDie","value","Math","ceil","random","isHeld","id","allNewDice","numbersArray","i","push","rollDice","setDice","oldDice","map","die","holdDice","dice","useState","diceArray"],"sources":["C:/Users/yuriy/Documents/Pro/React-projects/tenzies/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport Die from \"./Die\"\r\nimport {nanoid} from \"nanoid\";\r\n\r\nexport default function App() {\r\n    \r\n    function generateNewDie() {\r\n        return {\r\n            value: Math.ceil(Math.random() * 6),\r\n            isHeld: false,\r\n            id: nanoid()\r\n        }\r\n    }\r\n\r\n    function allNewDice() {\r\n        let numbersArray = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            numbersArray.push(generateNewDie())\r\n        }\r\n        return numbersArray;\r\n    }\r\n\r\n\r\n    function rollDice() {\r\n        setDice(oldDice => oldDice.map(die => {\r\n            return die.isHeld ?\r\n            die :\r\n            generateNewDie();\r\n        }))\r\n    }\r\n\r\n    function holdDice(id) {\r\n        setDice(oldDice => oldDice.map(die => {\r\n            return die.id === id ?\r\n            {...die, isHeld: !die.isHeld} :\r\n            die\r\n        }))\r\n            }\r\n            \r\n    const [dice, setDice] = React.useState(allNewDice());\r\n    const diceArray = dice.map(die => <Die \r\n        key={die.id} \r\n        \r\n        value={die.value} \r\n        isHeld={die.isHeld}\r\n        holdDice={() => holdDice(die.id)}\r\n        />)\r\n\r\n\r\n\r\n    return (\r\n        <main>\r\n            <div>\r\n            <h1>Tenzies</h1>\r\n<p>Roll untill all dice are the same. Click each die to freeze it at its current value between rolls.</p> \r\n            </div>\r\n\r\n            \r\n            <div className=\"dice-container\">\r\n                {diceArray}\r\n            </div>\r\n<button className=\"roll-dice\" onClick={rollDice}>Roll</button>\r\n        </main>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAAQC,MAAM,QAAO,QAAQ;AAAC;AAE9B,eAAe,SAASC,GAAG,GAAG;EAAA;EAE1B,SAASC,cAAc,GAAG;IACtB,OAAO;MACHC,KAAK,EAAEC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC;MACnCC,MAAM,EAAE,KAAK;MACbC,EAAE,EAAER,MAAM;IACd,CAAC;EACL;EAEA,SAASS,UAAU,GAAG;IAClB,IAAIC,YAAY,GAAG,EAAE;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACzBD,YAAY,CAACE,IAAI,CAACV,cAAc,EAAE,CAAC;IACvC;IACA,OAAOQ,YAAY;EACvB;EAGA,SAASG,QAAQ,GAAG;IAChBC,OAAO,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,CAACC,GAAG,IAAI;MAClC,OAAOA,GAAG,CAACV,MAAM,GACjBU,GAAG,GACHf,cAAc,EAAE;IACpB,CAAC,CAAC,CAAC;EACP;EAEA,SAASgB,QAAQ,CAACV,EAAE,EAAE;IAClBM,OAAO,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,CAACC,GAAG,IAAI;MAClC,OAAOA,GAAG,CAACT,EAAE,KAAKA,EAAE,GACpB;QAAC,GAAGS,GAAG;QAAEV,MAAM,EAAE,CAACU,GAAG,CAACV;MAAM,CAAC,GAC7BU,GAAG;IACP,CAAC,CAAC,CAAC;EACC;EAER,MAAM,CAACE,IAAI,EAAEL,OAAO,CAAC,GAAGhB,KAAK,CAACsB,QAAQ,CAACX,UAAU,EAAE,CAAC;EACpD,MAAMY,SAAS,GAAGF,IAAI,CAACH,GAAG,CAACC,GAAG,iBAAI,QAAC,GAAG;IAGlC,KAAK,EAAEA,GAAG,CAACd,KAAM;IACjB,MAAM,EAAEc,GAAG,CAACV,MAAO;IACnB,QAAQ,EAAE,MAAMW,QAAQ,CAACD,GAAG,CAACT,EAAE;EAAE,GAJ5BS,GAAG,CAACT,EAAE;IAAA;IAAA;IAAA;EAAA,QAKT,CAAC;EAIP,oBACI;IAAA,wBACI;MAAA,wBACA;QAAA,UAAI;MAAO;QAAA;QAAA;QAAA;MAAA,QAAK,eAC5B;QAAA,UAAG;MAAkG;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACvF,eAGN;MAAK,SAAS,EAAC,gBAAgB;MAAA,UAC1Ba;IAAS;MAAA;MAAA;MAAA;IAAA,QACR,eAClB;MAAQ,SAAS,EAAC,WAAW;MAAC,OAAO,EAAER,QAAS;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/C;AAEf;AAAC,GA5DuBZ,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}